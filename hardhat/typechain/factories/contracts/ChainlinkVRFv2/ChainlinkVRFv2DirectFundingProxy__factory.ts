/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChainlinkVRFv2DirectFundingProxy,
  ChainlinkVRFv2DirectFundingProxyInterface,
} from "../../../contracts/ChainlinkVRFv2/ChainlinkVRFv2DirectFundingProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nodeBackendAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_contractPurpose",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasLeft",
        type: "uint256",
      },
    ],
    name: "ChainlinkVRFv2DirectFundingProxy_InsufficientGasForConsumer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "ChainlinkVRFv2DirectFundingProxy_RequestAlreadyHandled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "offendingAddress",
        type: "address",
      },
    ],
    name: "ChainlinkVRFv2DirectFundingProxy_UnauthorizedBackend",
    type: "error",
  },
  {
    inputs: [],
    name: "ChainlinkVRFv2DirectFundingProxy_ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "FeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newNodeBackend",
        type: "address",
      },
    ],
    name: "NodeBackendAddressAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newNodeBackend",
        type: "address",
      },
    ],
    name: "NodeBackendAddressRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    name: "PurposeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dapp",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_callbackGasLimit",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_requestConfirmations",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_numWords",
        type: "uint32",
      },
    ],
    name: "RandomnessRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nodeBackendAddress",
        type: "address",
      },
    ],
    name: "addNodeBackendAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "callbackGasLimit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "sigV",
        type: "uint8[]",
      },
      {
        internalType: "bytes32[]",
        name: "sigR",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "sigS",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "requestOrigin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "callbackWithRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "callingContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractPurpose",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nodeBackendAddress",
        type: "address",
      },
    ],
    name: "removeNodeBackendAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requestHandled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "_requestConfirmations",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "_numWords",
        type: "uint32",
      },
    ],
    name: "requestRandomness",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_purpose",
        type: "string",
      },
    ],
    name: "setPurpose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedNodeBackendAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawERC20Token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001726380380620017268339810160408190526200003491620003c8565b33806000816200008b5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000be57620000be81620000f8565b50506001805460ff60a01b1916905550620000d983620001a3565b620000e48262000248565b620000ef816200027d565b5050506200051d565b336001600160a01b03821603620001525760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000082565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6001600160a01b038116620001fb5760405162461bcd60e51b815260206004820152601360248201527f416464726573732063616e6e6f74206265203000000000000000000000000000604482015260640162000082565b6001600160a01b038116600081815260026020526040808220805460ff191660011790555133917f4937e6f2449daa9d29ed46ba685b5b56fcb6ff37dee417fd52f2b1d7ecdc31a091a350565b6007819055604051819033907f92e6908704698649c7a3742faeecb2d2cdef5264a5bf9bebbaa5e4b06d36731690600090a350565b805162000292906008906020840190620002d9565b50336001600160a01b03167fa52c681f25a55bfe2c6a7d5bb7d3e9c34f97df7b6aa92fb6151e359b00e7612d82604051620002ce9190620004ac565b60405180910390a250565b828054620002e790620004e1565b90600052602060002090601f0160209004810192826200030b576000855562000356565b82601f106200032657805160ff191683800117855562000356565b8280016001018555821562000356579182015b828111156200035657825182559160200191906001019062000339565b506200036492915062000368565b5090565b5b8082111562000364576000815560010162000369565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003b257818101518382015260200162000398565b83811115620003c2576000848401525b50505050565b600080600060608486031215620003de57600080fd5b83516001600160a01b0381168114620003f657600080fd5b6020850151604086015191945092506001600160401b03808211156200041b57600080fd5b818601915086601f8301126200043057600080fd5b8151818111156200044557620004456200037f565b604051601f8201601f19908116603f011681019083821181831017156200047057620004706200037f565b816040528281528960208487010111156200048a57600080fd5b6200049d83602083016020880162000395565b80955050505050509250925092565b6020815260008251806020840152620004cd81604085016020870162000395565b601f01601f19169190910160400192915050565b600181811c90821680620004f657607f821691505b6020821081036200051757634e487b7160e01b600052602260045260246000fd5b50919050565b6111f9806200052d6000396000f3fe6080604052600436106101045760003560e01c80638da5cb5b116100a0578063affed0e011610064578063affed0e01461033a578063d0ca9f7014610350578063ddca3f4314610372578063eb68757f14610388578063f2fde38b146103a857600080fd5b80638da5cb5b14610264578063928d81c1146102825780639750df6c146102a25780639b7372f7146102ea5780639f12aa081461031a57600080fd5b8063369d9e461461010957806348d2d2891461012b5780635a18664c146101515780635c975abb1461016657806365e5550a1461019157806368446bcd146101c157806369fe0e2d146101e157806371f33fec1461020157806379ba50971461024f575b600080fd5b34801561011557600080fd5b50610129610124366004610c55565b6103c8565b005b61013e610139366004610c8b565b6103dc565b6040519081526020015b60405180910390f35b34801561015d57600080fd5b50610129610533565b34801561017257600080fd5b50600154600160a01b900460ff165b6040519015158152602001610148565b34801561019d57600080fd5b506101816101ac366004610c55565b60026020526000908152604090205460ff1681565b3480156101cd57600080fd5b506101296101dc366004610c55565b610567565b3480156101ed57600080fd5b506101296101fc366004610cd7565b6105df565b34801561020d57600080fd5b5061023761021c366004610cd7565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610148565b34801561025b57600080fd5b506101296105f0565b34801561027057600080fd5b506000546001600160a01b0316610237565b34801561028e57600080fd5b5061012961029d366004610cf0565b61069a565b3480156102ae57600080fd5b506102d56102bd366004610cd7565b60066020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610148565b3480156102f657600080fd5b50610181610305366004610cd7565b60056020526000908152604090205460ff1681565b34801561032657600080fd5b50610129610335366004610e5b565b6107b6565b34801561034657600080fd5b5061013e60035481565b34801561035c57600080fd5b506103656108f8565b6040516101489190610f2c565b34801561037e57600080fd5b5061013e60075481565b34801561039457600080fd5b506101296103a3366004610f81565b610986565b3480156103b457600080fd5b506101296103c3366004610c55565b610997565b6103d06109a8565b6103d9816109fd565b50565b60006007543410156104285760405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b60448201526064015b60405180910390fd5b6003805461048991309190600061043e8361102c565b919050556040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b600081815260046020908152604080832080546001600160a01b0319163317905560069091529020805463ffffffff871663ffffffff199091161790556003549091506104d890600190611045565b6040805183815263ffffffff878116602083015261ffff871682840152851660608201529051339132917fcc8338d4ff20e1f2e25d12c48a9d21d0c19d3978c9ba580e25628c3388b3f3049181900360800190a49392505050565b61053b6109a8565b60405133904780156108fc02916000818181858888f193505050501580156103d9573d6000803e3d6000fd5b61056f6109a8565b6001600160a01b0381166105955760405162461bcd60e51b815260040161041f9061105c565b6001600160a01b038116600081815260026020526040808220805460ff191690555133917ffe6f1976d25f1a91298e82bf5423a5bc441bd2c644ec45f24721166bbf7082d891a350565b6105e76109a8565b6103d981610a70565b6001546001600160a01b031633146106435760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b604482015260640161041f565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6106a26109a8565b60405163095ea7b360e01b81523060048201526024810182905282906001600160a01b0382169063095ea7b3906044016020604051808303816000875af11580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611089565b50806001600160a01b03166323b872dd306107386000546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018590526064016020604051808303816000875af115801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b09190611089565b50505050565b3360009081526002602052604090205460ff166107e857604051636a82c86960e01b815233600482015260240161041f565b60008281526005602052604090205460ff161561081b576040516369d03dd760e11b81526004810183905260240161041f565b6000828152600560209081526040808320805460ff19166001179055600690915290205463ffffffff16805a101561086a575a60405163715f43c560e11b815260040161041f91815260200190565b60008381526004602081905260409182902054915163034cec4760e41b81526001600160a01b03909216916334cec4709163ffffffff8516916108bb918d918d918d918d918d918d918d91016110e6565b600060405180830381600088803b1580156108d557600080fd5b5087f11580156108e9573d6000803e3d6000fd5b50505050505050505050505050565b6008805461090590611189565b80601f016020809104026020016040519081016040528092919081815260200182805461093190611189565b801561097e5780601f106109535761010080835404028352916020019161097e565b820191906000526020600020905b81548152906001019060200180831161096157829003601f168201915b505050505081565b61098e6109a8565b6103d981610aa5565b61099f6109a8565b6103d981610afd565b6000546001600160a01b031633146109fb5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604482015260640161041f565b565b6001600160a01b038116610a235760405162461bcd60e51b815260040161041f9061105c565b6001600160a01b038116600081815260026020526040808220805460ff191660011790555133917f4937e6f2449daa9d29ed46ba685b5b56fcb6ff37dee417fd52f2b1d7ecdc31a091a350565b6007819055604051819033907f92e6908704698649c7a3742faeecb2d2cdef5264a5bf9bebbaa5e4b06d36731690600090a350565b8051610ab8906008906020840190610ba0565b50336001600160a01b03167fa52c681f25a55bfe2c6a7d5bb7d3e9c34f97df7b6aa92fb6151e359b00e7612d82604051610af29190610f2c565b60405180910390a250565b336001600160a01b03821603610b4f5760405162461bcd60e51b815260206004820152601760248201527621b0b73737ba103a3930b739b332b9103a379039b2b63360491b604482015260640161041f565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b828054610bac90611189565b90600052602060002090601f016020900481019282610bce5760008555610c14565b82601f10610be757805160ff1916838001178555610c14565b82800160010185558215610c14579182015b82811115610c14578251825591602001919060010190610bf9565b50610c20929150610c24565b5090565b5b80821115610c205760008155600101610c25565b80356001600160a01b0381168114610c5057600080fd5b919050565b600060208284031215610c6757600080fd5b610c7082610c39565b9392505050565b803563ffffffff81168114610c5057600080fd5b600080600060608486031215610ca057600080fd5b610ca984610c77565b9250602084013561ffff81168114610cc057600080fd5b9150610cce60408501610c77565b90509250925092565b600060208284031215610ce957600080fd5b5035919050565b60008060408385031215610d0357600080fd5b610d0c83610c39565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610d5957610d59610d1a565b604052919050565b600067ffffffffffffffff821115610d7b57610d7b610d1a565b5060051b60200190565b600082601f830112610d9657600080fd5b81356020610dab610da683610d61565b610d30565b82815260059290921b84018101918181019086841115610dca57600080fd5b8286015b84811015610df557803560ff81168114610de85760008081fd5b8352918301918301610dce565b509695505050505050565b600082601f830112610e1157600080fd5b81356020610e21610da683610d61565b82815260059290921b84018101918181019086841115610e4057600080fd5b8286015b84811015610df55780358352918301918301610e44565b600080600080600080600060e0888a031215610e7657600080fd5b873567ffffffffffffffff80821115610e8e57600080fd5b610e9a8b838c01610d85565b985060208a0135915080821115610eb057600080fd5b610ebc8b838c01610e00565b975060408a0135915080821115610ed257600080fd5b610ede8b838c01610e00565b9650610eec60608b01610c39565b955060808a0135945060a08a0135935060c08a0135915080821115610f1057600080fd5b50610f1d8a828b01610e00565b91505092959891949750929550565b600060208083528351808285015260005b81811015610f5957858101830151858201604001528201610f3d565b81811115610f6b576000604083870101525b50601f01601f1916929092016040019392505050565b60006020808385031215610f9457600080fd5b823567ffffffffffffffff80821115610fac57600080fd5b818501915085601f830112610fc057600080fd5b813581811115610fd257610fd2610d1a565b610fe4601f8201601f19168501610d30565b91508082528684828501011115610ffa57600080fd5b8084840185840137600090820190930192909252509392505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161103e5761103e611016565b5060010190565b60008282101561105757611057611016565b500390565b6020808252601390820152720416464726573732063616e6e6f74206265203606c1b604082015260600190565b60006020828403121561109b57600080fd5b81518015158114610c7057600080fd5b600081518084526020808501945080840160005b838110156110db578151875295820195908201906001016110bf565b509495945050505050565b60e08082528851908201819052600090602090610100840190828c01845b8281101561112357815160ff1684529284019290840190600101611104565b50505083810382850152611137818b6110ab565b915050828103604084015261114c81896110ab565b6001600160a01b038816606085015290508560808401528460a084015282810360c084015261117b81856110ab565b9a9950505050505050505050565b600181811c9082168061119d57607f821691505b6020821081036111bd57634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122042fbccb55834eb5004c11b527801ed2bd667310fd53d1f9f6efa834342401fb364736f6c634300080e0033";

type ChainlinkVRFv2DirectFundingProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkVRFv2DirectFundingProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkVRFv2DirectFundingProxy__factory extends ContractFactory {
  constructor(...args: ChainlinkVRFv2DirectFundingProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nodeBackendAddress: PromiseOrValue<string>,
    _fee: PromiseOrValue<BigNumberish>,
    _contractPurpose: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainlinkVRFv2DirectFundingProxy> {
    return super.deploy(
      _nodeBackendAddress,
      _fee,
      _contractPurpose,
      overrides || {}
    ) as Promise<ChainlinkVRFv2DirectFundingProxy>;
  }
  override getDeployTransaction(
    _nodeBackendAddress: PromiseOrValue<string>,
    _fee: PromiseOrValue<BigNumberish>,
    _contractPurpose: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nodeBackendAddress,
      _fee,
      _contractPurpose,
      overrides || {}
    );
  }
  override attach(address: string): ChainlinkVRFv2DirectFundingProxy {
    return super.attach(address) as ChainlinkVRFv2DirectFundingProxy;
  }
  override connect(signer: Signer): ChainlinkVRFv2DirectFundingProxy__factory {
    return super.connect(signer) as ChainlinkVRFv2DirectFundingProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkVRFv2DirectFundingProxyInterface {
    return new utils.Interface(
      _abi
    ) as ChainlinkVRFv2DirectFundingProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkVRFv2DirectFundingProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkVRFv2DirectFundingProxy;
  }
}
