/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChainlinkVRFv2DirectFundingConsumerExample,
  ChainlinkVRFv2DirectFundingConsumerExampleInterface,
} from "../../../contracts/ChainlinkVRFv2/ChainlinkVRFv2DirectFundingConsumerExample";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyContractAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "permittedOracles",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ChainlinkVRFv2DirectFundingConsumerBase_MismatchedSignaturesCount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "ChainlinkVRFv2DirectFundingConsumerBase_RandomRequestFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sigCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigThreshold",
        type: "uint256",
      },
    ],
    name: "ChainlinkVRFv2DirectFundingConsumerBase_ToFewSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "ChainlinkVRFv2DirectFundingConsumerBase_UnauthorizedOracleSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "ChainlinkVRFv2DirectFundingConsumerBase_UnorderedOracles",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "IChainlinkVRFv2DirectFundingConsumer_InsufficientERC20Balance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "provided",
        type: "uint256",
      },
    ],
    name: "IChainlinkVRFv2DirectFundingConsumer_NativeFeeIncorrect",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "unauthorizedProvider",
        type: "address",
      },
    ],
    name: "IChainlinkVRFv2DirectFundingConsumer_RandomnessProviderUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "RequestAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestDoesntExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "permitted",
        type: "bool",
      },
    ],
    name: "OraclePermissionSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
    ],
    name: "OracleThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxyContractAddress",
        type: "address",
      },
    ],
    name: "ProxyContractSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RandomnessProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "SignaturesCheckPassedRandomnessReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "initiateRandomnessRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "multiSignatureThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permittedOracleAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requestExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "sigV",
        type: "uint8[]",
      },
      {
        internalType: "bytes32[]",
        name: "sigR",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "sigS",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "requestOrigin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "verifyAndFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e8538038062000e85833981016040819052620000349162000282565b604080517fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac5647260208201527f615770db9463494f4a7a0575fdd7fbbbdd2ac99f24e8a7960d5bd346cfa1dbf7918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a08201527f151543af6b722378665a73fe38dbceae4871a070b7cdaf5c6e30cf758dc33cc860c082015283908390839060e00160408051601f198184030181529190528051602090910120600155815160005b8181101562000154576200013f84828151811062000129576200012962000374565b602002602001015160016200017860201b60201c565b806200014b816200038a565b91505062000107565b506200016082620001cf565b6200016b8462000204565b50505050505050620003b2565b6001600160a01b038216600081815260036020526040808220805460ff1916851515908117909155905190929133917f1060bee83deed214c2a12a68c1f9751eae6403c02a301e3b0e6c186edbcd40fe9190a45050565b6002819055604051819033907f217c03c57b7a44f7eff62771ac481c515a54680b3c9b1c7092833f7de9c2354190600090a350565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f58333b590f7c0c285689b6efbfb240c40b1e1236883ef0bdc3c241909c0ec1d49190a350565b80516001600160a01b03811681146200026757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200029857600080fd5b620002a3846200024f565b602085810151919450906001600160401b0380821115620002c357600080fd5b818701915087601f830112620002d857600080fd5b815181811115620002ed57620002ed6200026c565b8060051b604051601f19603f830116810181811085821117156200031557620003156200026c565b60405291825284820192508381018501918a8311156200033457600080fd5b938501935b828510156200035d576200034d856200024f565b8452938501939285019262000339565b809750505050505050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b600060018201620003ab57634e487b7160e01b600052601160045260246000fd5b5060010190565b610ac380620003c26000396000f3fe6080604052600436106100555760003560e01c80630e4b08d81461005a5780631b74d0461461006457806334cec470146100a95780633d8ab930146100c95780639dff994e146100f9578063b6a205de14610131575b600080fd5b610062610155565b005b34801561007057600080fd5b5061009461007f3660046106dc565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156100b557600080fd5b506100626100c4366004610852565b6101b7565b3480156100d557600080fd5b506100946100e4366004610923565b60036020526000908152604090205460ff1681565b34801561010557600080fd5b50600054610119906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b34801561013d57600080fd5b5061014760025481565b6040519081526020016100a0565b60006101616002610206565b60008181526004602052604090205490915060ff161561019c576040516376f74a2d60e11b8152600481018290526024015b60405180910390fd5b6000908152600460205260409020805460ff19166001179055565b6000546001600160a01b031633146101e457604051636ea3c88d60e01b8152336004820152602401610193565b6101f387878787878787610219565b6101fd8282610394565b50505050505050565b600061021360038361040b565b92915050565b6002548751101561024a5786516002546040516242f8dd60e01b815260048101929092526024820152604401610193565b8451865114158061025d57508651865114155b1561027b5760405163531b36ff60e01b815260040160405180910390fd5b60007fe40bb1f9975376fc8ef686ceee5691f2b254d7f2406b2d46f567c8405d3e3ef2858585856040516020016102b2919061093e565b604051602081830303815290604052805190602001206040516020016103039594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b604051602081830303815290604052805190602001209050600061032989898985610422565b9050806103495760405163033bf2e360e31b815260040160405180910390fd5b82604051610357919061093e565b6040519081900381209085907f5b8903511b6613d6804512f8e07433598a4a7c4387c28bb7a889413b0282648e90600090a3505050505050505050565b60008281526004602052604090205460ff166103c757818160405163905fa34f60e01b8152600401610193929190610974565b806040516103d5919061093e565b6040519081900381209083907fff4da8d6539be576aad6540f093ecd98cd333cdd03159b3517de1bc0a9501ee790600090a35050565b600061041b6201d4c084846105b0565b9392505050565b60015460405161190160f01b6020820152602281019190915260428101829052600090819060620160405160208183030381529060405280519060200120905060008060005b885181101561059f5760006001858b8481518110610488576104886109c2565b60200260200101518b85815181106104a2576104a26109c2565b60200260200101518b86815181106104bc576104bc6109c2565b6020026020010151604051600081526020016040526040516104fa949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa15801561051c573d6000803e3d6000fd5b505050602060405103519050826001600160a01b0316816001600160a01b03161161055a576040516376e8a84760e01b815260040160405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff161561058c576105868460016109ee565b93508092505b508061059781610a06565b915050610468565b505060025411159695505050505050565b6000600a8263ffffffff1611156106055760405162461bcd60e51b815260206004820152601960248201527804d6178696d756d2052616e646f6d2056616c7565733a20313603c1b6044820152606401610193565b6000546040516348d2d28960e01b815263ffffffff808716600483015261ffff86166024830152841660448201526001600160a01b03909116906348d2d28990349060640160206040518083038185885af193505050508015610685575060408051601f3d908101601f1916820190925261068291810190610a1f565b60015b6106d4573d8080156106b3576040519150601f19603f3d011682016040523d82523d6000602084013e6106b8565b606091505b508060405163216bcd6d60e11b81526004016101939190610a38565b949350505050565b6000602082840312156106ee57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610734576107346106f5565b604052919050565b600067ffffffffffffffff821115610756576107566106f5565b5060051b60200190565b600082601f83011261077157600080fd5b813560206107866107818361073c565b61070b565b82815260059290921b840181019181810190868411156107a557600080fd5b8286015b848110156107d057803560ff811681146107c35760008081fd5b83529183019183016107a9565b509695505050505050565b600082601f8301126107ec57600080fd5b813560206107fc6107818361073c565b82815260059290921b8401810191818101908684111561081b57600080fd5b8286015b848110156107d0578035835291830191830161081f565b80356001600160a01b038116811461084d57600080fd5b919050565b600080600080600080600060e0888a03121561086d57600080fd5b873567ffffffffffffffff8082111561088557600080fd5b6108918b838c01610760565b985060208a01359150808211156108a757600080fd5b6108b38b838c016107db565b975060408a01359150808211156108c957600080fd5b6108d58b838c016107db565b96506108e360608b01610836565b955060808a0135945060a08a0135935060c08a013591508082111561090757600080fd5b506109148a828b016107db565b91505092959891949750929550565b60006020828403121561093557600080fd5b61041b82610836565b815160009082906020808601845b838110156109685781518552938201939082019060010161094c565b50929695505050505050565b6000604082018483526020604081850152818551808452606086019150828701935060005b818110156109b557845183529383019391830191600101610999565b5090979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610a0157610a016109d8565b500190565b600060018201610a1857610a186109d8565b5060010190565b600060208284031215610a3157600080fd5b5051919050565b600060208083528351808285015260005b81811015610a6557858101830151858201604001528201610a49565b81811115610a77576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212204779b733c030d6d6f6142a38d2a26eb8d6d10a21c1aaedade333aed4ebe2ea2464736f6c634300080e0033";

type ChainlinkVRFv2DirectFundingConsumerExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkVRFv2DirectFundingConsumerExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkVRFv2DirectFundingConsumerExample__factory extends ContractFactory {
  constructor(
    ...args: ChainlinkVRFv2DirectFundingConsumerExampleConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _proxyContractAddress: PromiseOrValue<string>,
    permittedOracles: PromiseOrValue<string>[],
    threshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainlinkVRFv2DirectFundingConsumerExample> {
    return super.deploy(
      _proxyContractAddress,
      permittedOracles,
      threshold,
      overrides || {}
    ) as Promise<ChainlinkVRFv2DirectFundingConsumerExample>;
  }
  override getDeployTransaction(
    _proxyContractAddress: PromiseOrValue<string>,
    permittedOracles: PromiseOrValue<string>[],
    threshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _proxyContractAddress,
      permittedOracles,
      threshold,
      overrides || {}
    );
  }
  override attach(address: string): ChainlinkVRFv2DirectFundingConsumerExample {
    return super.attach(address) as ChainlinkVRFv2DirectFundingConsumerExample;
  }
  override connect(
    signer: Signer
  ): ChainlinkVRFv2DirectFundingConsumerExample__factory {
    return super.connect(
      signer
    ) as ChainlinkVRFv2DirectFundingConsumerExample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkVRFv2DirectFundingConsumerExampleInterface {
    return new utils.Interface(
      _abi
    ) as ChainlinkVRFv2DirectFundingConsumerExampleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkVRFv2DirectFundingConsumerExample {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkVRFv2DirectFundingConsumerExample;
  }
}
